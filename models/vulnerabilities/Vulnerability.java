package models.vulnerabilities;

import models.Node;

import org.bson.Document;
import org.bson.types.ObjectId;
import services.db.DBConnection;

import static com.mongodb.client.model.Filters.eq;

abstract public class Vulnerability extends Node {

    public final static String COLLECTION = "vulnerabilities";

    public String type;

    public static Vulnerability findByMainId(ObjectId _id){
        Document document = findByMainIdAndDbCon(
                new DBConnection(COLLECTION),
                _id
        );

        if (document == null){
            return null;
        }

        switch ((String) document.get("type")){
            case CPE.TYPE: return CPE.instance(document);
            case CVE.TYPE: return CVE.instance(document);
            case CVSS.TYPE: return CVSS.instance(document);
            case CWE.TYPE: return CWE.instance(document);
            case Metric.TYPE: return Metric.instance(document);
            case Reference.TYPE: return Reference.instance(document);
            case Severity.TYPE: return Severity.instance(document);
            default: return null;
        }
    }

    public String getCollection(){
        return COLLECTION;
    }
}
